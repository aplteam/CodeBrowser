(
  '## Overview'
  ''
  '`CodeBrowser` is designed to collect the code of all functions, operators, classes, namespace scripts, Interfaces and'
  'even GUI instances (optionally, and only when `KeepOnClose←1`) within the given non-scripted namespace(s) and compile '
  'a stand-alone HTML page from it.'
  ''
  'It''s a tool to view all the code of such namespace(s) in a single HTML document. Extensive linking allows you to jump'
  'around easily; ideal for a code reviewing.'
  ''
  ''
  '## Requirements'
  ''
  'Codebrowser relies on the [Tatin packet manager](https://github.com/aplteam/Tatin) to be available.'
  ''
  ''
  '## Installation'
  ''
  'In order to use it you need to download it from [GitHub](https://github.com/aplteam/CodeBrowser). The folder '
  '"CodeBrowser" needs to go into any folder that is scanned by Dyalog for user commands.'
  ''
  'Restart Dyalog APL or execute the command `]UReset` which will make it available in an already running session.'
  ''
  'You then have three different ways of using `CodeBrowser`:'
  ''
  '## Use the user command `]CodeBrowser`'
  ''
  'This is by far the easiest way to use but it comes with a few limitations.'
  ''
  'To create an HTML page for a namespace `#.Foo`:'
  ''
  '```'
  ']CodeBrowser #.Foo'
  '```'
  ''
  'There are several flags available which allow you to adapt the behaviour and/or the information shown by `CodeBrowser`.'
  ''
  'For details regarding those options and flags execute `]CodeBrowser -?`.'
  ''
  'However, not all parameters can be set this way. If you need to set one of the parameters that are not available via'
  'the user command interface then you have to consider the two other ways to use `CodeBrowser` because they give you full'
  'access to all parameters.'
  ''
  ''
  '## Using the GUI    '
  ''
  'Note that this is only available under Windows.'
  ''
  'Execute:'
  ''
  '```'
  '      ]CodeBrowser -gui'
  '```'
  ''
  'That will show a GUI that allows you to specify or amend all parameters available. You may specify one or more '
  'namespaces together with the `-gui` flag but no other flags. If you try anway an error is thrown.'
  ''
  ''
  '## Use CodeBrowser''s API'
  ''
  'Use this when you want to take advantage of parameters that are not available via the user command interface or'
  'you want to create CodeBrowser''s HTML page under program control. In this case the GUI is not suitable of course.'
  ''
  'For the API to become available you may execute `]CoderBrowser -version`. This is the lazy approach. To make CodeBrowser '
  'available from the start you need to add it to Dyalog''s start-up procedure. Refer to the Dyalog documentation for this.'
  ''
  '`CodeBrowser` does not only comprise a namespace `CodeBrowser`, it also comes with a number of Tatin packages.'
  'That''s why the presence of Tatin is a requirement: only then can Tatin packages be loaded.'
  ''
  '### Example'
  ''
  '```'
  '      ]CoderBrowser -version                ⍝ Loads the code into ⎕SE'
  '      parms←⎕SE.CodeBrowser.CreateParms ⍬'
  '      parms.caption←''My First Ty'''
  '      parms ⎕SE.CodeBrowser.Run #'
  '```'
  ''
  'Note that you can get a list of all (almost) parameters with their current values by calling the `∆List` function:'
  ''
  '```'
  '      ⎕SE.CodeBrowser.CreateParms.∆List'
  '```'
  ''
)
